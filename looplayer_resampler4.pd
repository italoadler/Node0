#N canvas 1672 0 1366 726 10;
#X obj 482 302 s \$0-stopr;
#X obj 574 303 s \$0-start;
#X obj 482 281 r looperctrl;
#X obj 576 282 r att;
#N canvas 756 298 381 325 limiter-for-two-channels 0;
#X obj 24 22 inlet~;
#X obj 121 21 loadbang;
#X obj 24 60 z~ 64;
#X obj 24 169 *~;
#X obj 24 200 outlet~;
#X obj 121 113 zexy/limiter~;
#X msg 154 62 limit 100;
#X connect 0 0 2 0;
#X connect 0 0 5 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 3 1;
#X restore -523 487 pd limiter-for-two-channels;
#X obj 153 347 table \$0-looperleft 2.82e+006;
#X obj -522 383 *~;
#X obj 642 147 hsl 128 25 0 1 0 1 \$0-feedback \$0-feedbackctrl feedback
20 12 0 10 -228856 -260097 -1 12700 0;
#X obj 643 187 hsl 128 25 0 1 0 1 \$0-outlevel \$0-outlevelin outlevel
20 12 0 10 -228856 -260097 -1 12700 1;
#X obj 520 164 bng 50 250 50 0 empty empty empty 17 7 0 10 -228856
-260097 -1;
#N canvas 507 427 187 154 feedbacklevel 0;
#X obj 27 81 line~;
#X obj 27 109 outlet~;
#X msg 27 57 \$1 500;
#X text 25 131 feedback level;
#X obj 95 109 outlet;
#X obj 29 26 r \$0-feedback;
#X connect 0 0 1 0;
#X connect 2 0 0 0;
#X connect 5 0 2 0;
#X connect 5 0 4 0;
#X restore -488 345 pd feedbacklevel;
#X floatatom -415 381 5 0 0 0 - - -;
#N canvas 242 208 1024 716 outlevel 0;
#X obj 27 101 line~;
#X obj 27 129 outlet~;
#X msg 27 77 \$1 500;
#X obj 82 78 outlet;
#X obj 27 24 r \$0-outlevel;
#X text 25 151 output level;
#X obj 112 25 r \$0-mute;
#X obj 131 78 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 27 51 f;
#X connect 0 0 1 0;
#X connect 2 0 0 0;
#X connect 4 0 8 0;
#X connect 6 0 8 0;
#X connect 8 0 2 0;
#X connect 8 0 3 0;
#X connect 8 0 7 0;
#X restore -491 529 pd outlevel;
#X floatatom -428 551 5 0 0 0 - - -;
#X obj 532 251 s \$0-looperleft;
#X msg 520 226 const 0;
#X text 572 181 clear loop;
#X obj -513 457 hip~ 5;
#N canvas 577 175 391 247 more-info 0;
#X text 14 204 This patch uses [count~] and [poke~] from cyclone \,
[limiter~] from zexy.;
#X text 16 72 With feedback setting at max \, it is a looper. With
lower feedback settings \, the loop content will fade away.;
#X text 15 115 The read index is one sample ahead of the write index
\, and wrapped within the loop size.;
#X text 14 17 Elementary looping delay with sound on sound. A similar
thing can be done with [delwrite~] and [delread~] or [vd~] \, but [delwrite~]
lacks the option to clear the delay buffer.;
#X text 16 153 Loop size could be up to 2^23-1 samples theoretically.
Beyond that size \, indexing will loose the required precision.;
#X obj 325 217 mux~;
#X restore 153 320 pd more-info;
#X obj 267 217 r \$0-start;
#X obj 162 253 s \$0-clear;
#X msg 267 239 1;
#X obj 267 260 s \$0-mute;
#X obj -506 566 *~;
#X obj 223 214 r pgm;
#X obj 163 235 spigot;
#X obj 230 232 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 147 216 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj -506 649 outlet~ left;
#X obj 520 140 r clear;
#X msg 657 303 resize \$1;
#X obj 666 323 s \$0-looperleft;
#X obj 408 223 s \$0-feedbackctrl;
#X obj 426 33 inlet feedback;
#X obj 411 200 / 100;
#X obj 523 32 inlet clear;
#X obj 416 247 outlet feedback;
#X floatatom 423 171 5 0 0 0 - - -;
#X obj 304 113 knob 32 32 0 0.7 0 0 empty empty empty 0 -8 0 8 -4034
-4034 -1 0 1;
#X obj 625 30 inlet vol;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-viewer 100 float 0;
#X coords 0 -1 99 1 60 40 2 0 0;
#X restore 338 103 graph;
#X obj -365 614 tabwrite~ \$0-viewer;
#X obj -361 568 loadbang;
#X obj -392 556 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -523 316 tabread4~ \$0-looperleft;
#X obj 163 215 r clearer;
#X obj 714 60 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 700 61 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 412 281 r clear;
#X msg 407 303 30000;
#X obj -363 592 metro 100;
#X obj -513 426 inlet~ left;
#X text -26 633 use tabwrite;
#X obj -522 622 tabwrite~ \$0-looperleft;
#X obj -55 77 r loopsize;
#X msg -171 210 stop;
#X obj -456 167 *~;
#X msg -38 189 set loopsize \$1;
#X obj -171 164 delay;
#X obj -170 188 sel 0 1;
#X msg -130 210 start;
#X obj -523 352 +~ 1;
#X floatatom -411 55 0 0 0 0 - - -;
#X text -375 99 <-- frequency (Hz.);
#X floatatom -330 146 0 0 0 0 - - -;
#X obj -455 203 *~ 0;
#X obj -455 230 +~ 1;
#X obj -455 123 phasor~ 0;
#X obj -278 116 /;
#X obj -412 79 * 1;
#X floatatom -458 103 5 0 0 0 - - -;
#X text -656 81 read this to get ms to send to 1st loop;
#X obj -330 172 * 480;
#X msg -283 81 48000 \$1;
#X text -409 202 comment;
#X text -298 153 comment;
#X text -410 230 comment;
#X obj -289 140 r loopsize;
#X obj -289 175 / 480;
#X obj -421 -10 loadbang;
#X msg -413 11 1;
#X obj -408 33 hsl 128 15 0 2 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 6350 1;
#X obj -43 101 / 48000;
#X obj 2 124 * 1000;
#X floatatom 19 149 5 0 0 0 - - -;
#X floatatom -31 142 5 0 0 0 - - -;
#X obj -162 116 t b b;
#X obj 93 86 r pgmout;
#X obj 94 110 == 8;
#X obj 63 138 spigot;
#X obj -564 294 s newloopsize;
#X floatatom -579 185 10 0 0 0 - - -;
#X obj -487 142 r \$0-n1x;
#X obj -553 260 spigot;
#X obj -493 166 > 0.3;
#X obj -491 189 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj -553 238 int;
#X obj -522 214 t f b;
#X obj -163 93 r loop8;
#X obj -198 173 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X floatatom -582 151 5 0 0 0 - - -;
#X floatatom -253 177 5 0 0 0 - - -;
#X obj -398 427 osc~ 500;
#X obj -190 88 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg -123 119 set \$1;
#X msg -120 140 2916;
#X msg -163 138 bang;
#X obj -544 161 * 10000;
#X connect 2 0 0 0;
#X connect 3 0 1 0;
#X connect 4 0 23 0;
#X connect 4 0 53 0;
#X connect 6 0 4 0;
#X connect 9 0 15 0;
#X connect 10 0 6 1;
#X connect 10 1 11 0;
#X connect 12 0 23 1;
#X connect 12 1 13 0;
#X connect 15 0 14 0;
#X connect 17 0 4 0;
#X connect 19 0 21 0;
#X connect 21 0 22 0;
#X connect 23 0 41 0;
#X connect 23 0 28 0;
#X connect 24 0 25 1;
#X connect 24 0 26 0;
#X connect 25 0 20 0;
#X connect 29 0 9 0;
#X connect 29 0 80 0;
#X connect 33 0 34 0;
#X connect 33 0 37 0;
#X connect 34 0 32 0;
#X connect 34 0 36 0;
#X connect 35 0 9 0;
#X connect 39 0 38 0;
#X connect 42 0 50 0;
#X connect 43 0 50 0;
#X connect 44 0 41 0;
#X connect 44 0 61 0;
#X connect 45 0 25 0;
#X connect 45 0 27 0;
#X connect 48 0 49 0;
#X connect 50 0 41 0;
#X connect 51 0 41 0;
#X connect 51 0 17 0;
#X connect 54 0 57 0;
#X connect 54 0 82 0;
#X connect 55 0 53 0;
#X connect 56 0 65 0;
#X connect 58 0 59 0;
#X connect 58 0 99 0;
#X connect 59 0 55 0;
#X connect 59 1 60 0;
#X connect 60 0 53 0;
#X connect 61 0 6 0;
#X connect 62 0 69 0;
#X connect 64 0 72 0;
#X connect 65 0 66 0;
#X connect 66 0 44 0;
#X connect 67 0 56 0;
#X connect 68 0 69 1;
#X connect 69 0 67 0;
#X connect 69 0 70 0;
#X connect 69 0 107 0;
#X connect 72 0 65 1;
#X connect 72 0 73 0;
#X connect 73 0 68 0;
#X connect 77 0 78 0;
#X connect 77 0 101 0;
#X connect 78 0 64 0;
#X connect 79 0 80 0;
#X connect 80 0 81 0;
#X connect 81 0 62 0;
#X connect 82 0 83 0;
#X connect 82 0 85 0;
#X connect 83 0 84 0;
#X connect 83 0 104 0;
#X connect 86 0 106 0;
#X connect 86 1 105 0;
#X connect 87 0 88 0;
#X connect 88 0 89 1;
#X connect 92 0 94 0;
#X connect 93 0 90 0;
#X connect 94 0 95 0;
#X connect 95 0 97 0;
#X connect 96 0 93 0;
#X connect 97 0 93 1;
#X connect 97 1 96 0;
#X connect 98 0 86 0;
#X connect 103 0 86 0;
#X connect 104 0 105 0;
#X connect 105 0 58 0;
#X connect 106 0 58 0;
#X connect 107 0 91 0;
#X connect 107 0 96 0;
#X coords 0 722 1 721 100 50 1 300 100;
